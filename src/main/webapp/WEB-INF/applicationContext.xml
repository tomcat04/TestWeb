<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
     http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

	<!--<context:component-scan base-package="org.mybatis.jpetstore.service" />-->
<!--    <context:annotation-config />  
   扫描包，注册为Bean,多个包则在“”内以，分隔
    <context:component-scan base-package="com.wms.core.service" />
    
     启动Spring MVC的注解功能，完成请求和注解POJO的映射   
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" lazy-init="false" />  
  
    
     define the SqlSessionFactory 
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="typeAliasesPackage" value="com.wms.core.domain" />
        <property name="mapperLocations" value="/sqlMap/*Mapper.xml"></property>
        <property name="configLocation" value="classpath*:mybatis-config.xml" />
    </bean>
    
     scan for mappers and let them be autowired 
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.wms.core.mapper" />
    </bean>
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${driverClassName}" />
		<property name="url" value="${url}" />
		<property name="username" value="${username}" />
		<property name="password" value="${password}" />
		 data source configuration 
		<property name="initialSize" value="10" /> initial connections 
		<property name="maxActive" value="100" /> MAX connections 
		<property name="maxIdle" value="50" /> MAX idle connections 
		<property name="minIdle" value="20" /> MIN idle connections 
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="validationQuery" value="select 1" />
		<property name="timeBetweenEvictionRunsMillis" value="20000" />
		<property name="numTestsPerEvictionRun" value="100" />
	</bean>
	
	 oracle配置 
	<bean id="dataSource-oracle" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="oracleDriverClassName" />
		<property name="url" value="oracleurl" />
		<property name="username" value="oracleUsername" />
		<property name="password" value="oraclePassword" />
	</bean>

     transaction manager, use JtaTransactionManager for global tx 
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>
    
     enable transaction demarcation with annotations 
    <tx:annotation-driven />
    
     引入属性文件 
     <context:property-placeholder location="/config/mysql-jdbc.properties","" /> 
    <bean id="propertyPlaceholderConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">  
    <property name="locations">
        <list>
            <value>/config/mysql-jdbc.properties</value>
            <value>/config/oracle-jdbc.properties</value>
        </list>
    </property>
	</bean> 
    
     支持上传文件   
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"/>  
  -->
  <!--<import resource="classpath:applicationContext-core.xml" />-->
</beans>
